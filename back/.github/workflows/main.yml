name: Java CI/CD Pipeline with Docker Compose

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Java environment
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Build with Maven
        run: mvn clean install -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images with Docker Compose
        run: |
          docker-compose -f docker-compose.prod.yml build
          docker-compose -f docker-compose.prod.yml push
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          SPRING_DATASOURCE_URL_USERSDB: ${{ secrets.SPRING_DATASOURCE_URL_USERSDB }}
          SPRING_DATASOURCE_URL_PRODUCTSDB: ${{ secrets.SPRING_DATASOURCE_URL_PRODUCTSDB }}
          SPRING_DATASOURCE_URL_TRANSACTIONSDB: ${{ secrets.SPRING_DATASOURCE_URL_TRANSACTIONSDB }}
          EUREKA_SERVER_URL: ${{ secrets.EUREKA_SERVER_URL }}

      # Error Handling: Echo a message if any of the previous steps failed
      - name: Error Handling
        if: failure()
        run: echo "An error occurred in the previous steps."

      # Upload logs on failure: Capture and upload logs if any of the previous steps failed
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: path/to/logs
